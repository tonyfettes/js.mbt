package tonyfettes/js

alias @moonbitlang/core/builtin as @builtin

// Values
let null : Null

let undefined : Undefined

// Types and methods
pub type Array
impl Array {
  length[T](Self[T]) -> Int
  new[T]() -> Self[T]
  of[T : ArrayPush](@builtin.Array[T]) -> Self[T]
  op_get[T : ArrayGet](Self[T], Int) -> T
  push[T : ArrayPush](Self[T], T) -> Unit
}

pub type Null

pub type Nullable
impl Nullable {
  to_option[T](Self[T]) -> T?
}

type Object

pub type Undefinable
impl Undefinable {
  to_option[T](Self[T]) -> T?
}

pub type Undefined

// Type aliases

// Traits
pub(open) trait ArrayGet {
  get(Array[Self], Int) -> Self
}
impl ArrayGet::get

pub(open) trait ArrayPush {
  push(Array[Self], Self) -> Unit
}
impl ArrayPush::push
impl ArrayPush for Bool
impl ArrayPush for Int
impl ArrayPush for Double

