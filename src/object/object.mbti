package "tonyfettes/js/object"

import(
  "tonyfettes/js/value"
)

// Values
fn to[To : To](T) -> To?

// Types and methods
pub extern type T
impl T {
  new() -> Self
  op_get(Self, @value.T) -> @value.T
  op_set(Self, @value.T, @value.T) -> Unit
  to[To : To](Self) -> To?
}
impl @value.Of for T
impl @value.To for T

// Type aliases

// Traits
pub(open) trait Of {
  to_object(Self) -> T
}

pub(open) trait To {
  to(T) -> Self?
}

